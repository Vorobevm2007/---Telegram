import telebot
from telebot import types
import requests
from bs4 import BeautifulSoup
import time

bot = telebot.TeleBot('6905629509:AAHNqx1RX6KmapmHjiFXQZTsLWA8Az2_Q4Q')

@bot.message_handler(commands=['start'])
def messag(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard = True,row_width=2)
    SchoolSchedule = types.KeyboardButton('–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —É—Ä–æ–∫–æ–≤')
    TheMainMenu = types.KeyboardButton('–û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é')
    markup.add(SchoolSchedule,TheMainMenu)
    bot.send_message(message.chat.id,'–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!\n–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–æ–∑–¥–∞–Ω–∞...\n–° –ø–æ–º–æ—â—å—é –Ω–µ—ë, –º–æ–∂–Ω–æ —Å–æ –º–Ω–æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å.\n–ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É <b><u>"–û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é",</u></b>\n<i>–ê –¥–∞–ª—å—à–µ —Å–∞–º(–∞) —Ä–∞–∑–±–µ—Ä—ë—à—å—Å—è...</i>',reply_markup=markup,parse_mode="html")

@bot.callback_query_handler(func=lambda call:True)
def massage(call):
    if call.message:
        match(call.data):
            case 'MenuForStudents':
                markup = types.InlineKeyboardMarkup(row_width=1)
                UntilTheSummer = types.InlineKeyboardButton('–°–∫–æ–ª—å–∫–æ –¥–æ –∫–æ–Ω—Ü–∞?üìÜ',callback_data='UntilTheSummer')
                SchoolAnnouncements = types.InlineKeyboardButton('–û–±—â–µ—à–∫–æ–ª—å–Ω—ã–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—èüìù',callback_data='SchoolAnnouncements')
                UntilTheEndOfTheLesson = types.InlineKeyboardButton('–°–∫–æ–ª—å–∫–æ –¥–æ –∫–æ–Ω—Ü–∞ —É—Ä–æ–∫–∞?üßæ',callback_data='UntilTheEndOfTheLesson')
                CallSchedule = types.InlineKeyboardButton('–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–≤–æ–Ω–∫–æ–≤üìÉ', callback_data='CallSchedule')
                ElectronicMagazine = types.InlineKeyboardButton('–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–π –∂—É—Ä–Ω–∞–ªüìï',callback_data='ElectronicMagazine')
                SchoolWebsite = types.InlineKeyboardButton('–®–∫–æ–ª—å–Ω—ã–π —Å–∞–π—Çüë©‚Äçüíª', callback_data='SchoolWebsite')
                ProninWebsite = types.InlineKeyboardButton('–°–∞–π—Ç –ü—Ä–æ–Ω–∏–Ω–∞ –ê.–í.üßë‚Äçüíª',callback_data='ProninWebsite')
                Course = types.InlineKeyboardButton('–ö—É—Ä—Å –¥–æ–ª–ª–∞—Ä–∞üíµ', callback_data='Course')
                Exit = types.InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data='Menu')
                markup.add(UntilTheSummer, SchoolAnnouncements, UntilTheEndOfTheLesson, CallSchedule,ElectronicMagazine, SchoolWebsite, ProninWebsite, Course, Exit)
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.id, text='–ú–µ–Ω—é —É—á–µ–Ω–∏–∫–æ–≤',reply_markup=markup)
            case 'MenuForTeacher':
                markup = types.InlineKeyboardMarkup(row_width=1)
                UntilTheSummer = types.InlineKeyboardButton('–°–∫–æ–ª—å–∫–æ –¥–æ –∫–æ–Ω—Ü–∞?üìÜ', callback_data='UntilTheSummer')
                SchoolAnnouncements = types.InlineKeyboardButton('–û–±—â–µ—à–∫–æ–ª—å–Ω—ã–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—èüìù',callback_data='SchoolAnnouncements')
                UntilTheEndOfTheLesson = types.InlineKeyboardButton('–°–∫–æ–ª—å–∫–æ –¥–æ –∫–æ–Ω—Ü–∞ —É—Ä–æ–∫–∞?üßæ',callback_data='UntilTheEndOfTheLesson')  # ---
                CallSchedule = types.InlineKeyboardButton('–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–≤–æ–Ω–∫–æ–≤üìÉ', callback_data='CallSchedule')
                ElectronicMagazine = types.InlineKeyboardButton('–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–π –∂—É—Ä–Ω–∞–ªüìï',callback_data='ElectronicMagazine')
                SchoolWebsite = types.InlineKeyboardButton('–®–∫–æ–ª—å–Ω—ã–π —Å–∞–π—Çüë©‚Äçüíª', callback_data='SchoolWebsite')
                Course = types.InlineKeyboardButton('–ö—É—Ä—Å –¥–æ–ª–ª–∞—Ä–∞üíµ', callback_data='Course')
                Exit = types.InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data='Menu')
                markup.add(UntilTheSummer, SchoolAnnouncements, UntilTheEndOfTheLesson, CallSchedule,ElectronicMagazine, SchoolWebsite, Course, Exit)
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.id, text='–ú–µ–Ω—é —É—á–∏—Ç–µ–ª–µ–π',reply_markup=markup)
            case 'UntilTheSummer':
                markup = types.InlineKeyboardMarkup(row_width=2)
                Exit = types.InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data='Menu')
                markup.add(Exit)
                BASE_URL_BeforeTheSummerHolidays = 'https://www.calc.ru/dney-do-leta.html?hl=ru_RU&amp;ysclid=lf89kzpn8x84005675'
                response = requests.get(BASE_URL_BeforeTheSummerHolidays)
                soup = BeautifulSoup(response.text, 'lxml')
                data = soup.find('div', class_='text')
                namber = data.find('div').text
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.id,text=f'–î–æ –∫–æ–Ω—Ü–∞ —É—á—ë–±—ã:\n{namber}', reply_markup=markup)
            case 'SchoolAnnouncements':
                markup = types.InlineKeyboardMarkup(row_width=2)
                Site = types.InlineKeyboardButton('–°—Ç—Ä–∞–Ω–∏—á–∫–∞ –≤ –í–ö', url='https://m.vk.com/mbouabramovskaya')
                Exit = types.InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data='Menu')
                markup.add(Site, Exit)
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.id, text=f'–°—Ç—Ä–∞–Ω–∏—á–∫–∞ –≤ –í–ö –ê–±—Ä–∞–º–æ–≤—Å–∫–æ–π –°–®', reply_markup=markup)
            case 'UntilTheEndOfTheLesson':
                markup = types.InlineKeyboardMarkup(row_width=2)
                Pon = types.InlineKeyboardButton('–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫', callback_data='Pon')
                Vtor = types.InlineKeyboardButton("–í—Ç–æ—Ä–Ω–∏–∫-–ø—è—Ç–Ω–∏—Ü–∞", callback_data='Vtor')
                Exit = types.InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data='Menu')
                markup.add(Pon, Vtor, Exit)
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.id, text='–ö–∞–∫–æ–π —Å–µ–≥–æ–¥–Ω—è –¥–µ–Ω—å?',reply_markup=markup)
            case 'Pon':
                markup = types.InlineKeyboardMarkup(row_width=2)
                Exit = types.InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data='UntilTheEndOfTheLesson')
                markup.add(Exit)
                hour = time.localtime().tm_hour
                min = time.localtime().tm_min
                resultInMin = hour * 60 + min
                prizent = ''
                if resultInMin < 550:
                    prizent = f'–£—Ä–æ–∫–∏ –Ω–µ –Ω–∞—á–∞–ª–∏—Å—å.'
                elif resultInMin > 550 and resultInMin < 590:
                    res = resultInMin - 590
                    prizent = f'1 —É—Ä–æ–∫ –∑–∞–∫–æ–Ω—á–∏—Ç—Å—è —á–µ—Ä–µ–∑:{res}–º–∏–Ω—É—Ç'
                elif resultInMin > 600 and resultInMin < 640:
                    res = resultInMin - 640
                    prizent = f'2 —É—Ä–æ–∫ –∑–∞–∫–æ–Ω—á–∏—Ç—Å—è —á–µ—Ä–µ–∑:{res}–º–∏–Ω—É—Ç'
                elif resultInMin > 655 and resultInMin < 695:
                    res = resultInMin - 695
                    prizent = f'3 —É—Ä–æ–∫ –∑–∞–∫–æ–Ω—á–∏—Ç—Å—è —á–µ—Ä–µ–∑:{res}–º–∏–Ω—É—Ç'
                elif resultInMin > 710 and resultInMin < 750:
                    res = resultInMin - 750
                    prizent = f'4 —É—Ä–æ–∫ –∑–∞–∫–æ–Ω—á–∏—Ç—Å—è —á–µ—Ä–µ–∑:{res}–º–∏–Ω—É—Ç'
                elif resultInMin > 765 and resultInMin < 805:
                    res = resultInMin - 805
                    prizent = f'5 —É—Ä–æ–∫ –∑–∞–∫–æ–Ω—á–∏—Ç—Å—è —á–µ—Ä–µ–∑:{res}–º–∏–Ω—É—Ç'
                elif resultInMin > 815 and resultInMin < 855:
                    res = resultInMin - 855
                    prizent = f'6 —É—Ä–æ–∫ –∑–∞–∫–æ–Ω—á–∏—Ç—Å—è —á–µ—Ä–µ–∑:{res}–º–∏–Ω—É—Ç'
                elif resultInMin > 860 and resultInMin < 900:
                    res = resultInMin - 900
                    prizent = f'7 —É—Ä–æ–∫ –∑–∞–∫–æ–Ω—á–∏—Ç—Å—è —á–µ—Ä–µ–∑:{res}–º–∏–Ω—É—Ç'
                elif resultInMin > 900:
                    prizent = f'–£—Ä–æ–∫–∏ –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å.'
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.id, text=prizent,reply_markup=markup)
            case 'Vtor':
                markup = types.InlineKeyboardMarkup(row_width=2)
                Exit = types.InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data='UntilTheEndOfTheLesson')
                markup.add(Exit)
                hour = time.localtime().tm_hour
                min = time.localtime().tm_min
                resultInMin = hour * 60 + min
                prizent = ''
                if resultInMin < 510:
                    prizent = f'–£—Ä–æ–∫–∏ –Ω–µ –Ω–∞—á–∞–ª–∏—Å—å.'
                elif resultInMin > 510 and resultInMin < 550:
                    res = resultInMin - 550
                    prizent = f'1 —É—Ä–æ–∫ –∑–∞–∫–æ–Ω—á–∏—Ç—Å—è —á–µ—Ä–µ–∑:{res}–º–∏–Ω—É—Ç'
                elif resultInMin > 560 and resultInMin < 600:
                    res = resultInMin - 600
                    prizent = f'2 —É—Ä–æ–∫ –∑–∞–∫–æ–Ω—á–∏—Ç—Å—è —á–µ—Ä–µ–∑:{res}–º–∏–Ω—É—Ç'
                elif resultInMin > 615 and resultInMin < 655:
                    res = resultInMin - 655
                    prizent = f'3 —É—Ä–æ–∫ –∑–∞–∫–æ–Ω—á–∏—Ç—Å—è —á–µ—Ä–µ–∑:{res}–º–∏–Ω—É—Ç'
                elif resultInMin > 670 and resultInMin < 710:
                    res = resultInMin - 710
                    prizent = f'4 —É—Ä–æ–∫ –∑–∞–∫–æ–Ω—á–∏—Ç—Å—è —á–µ—Ä–µ–∑:{res}–º–∏–Ω—É—Ç'
                elif resultInMin > 725 and resultInMin < 765:
                    res = resultInMin - 765
                    prizent = f'5 —É—Ä–æ–∫ –∑–∞–∫–æ–Ω—á–∏—Ç—Å—è —á–µ—Ä–µ–∑:{res}–º–∏–Ω—É—Ç'
                elif resultInMin > 775 and resultInMin < 815:
                    res = resultInMin - 815
                    prizent = f'6 —É—Ä–æ–∫ –∑–∞–∫–æ–Ω—á–∏—Ç—Å—è —á–µ—Ä–µ–∑:{res}–º–∏–Ω—É—Ç'
                elif resultInMin > 825 and resultInMin < 865:
                    res = resultInMin - 865
                    prizent = f'7 —É—Ä–æ–∫ –∑–∞–∫–æ–Ω—á–∏—Ç—Å—è —á–µ—Ä–µ–∑:{res}–º–∏–Ω—É—Ç'
                elif resultInMin > 865:
                    prizent = f'–£—Ä–æ–∫–∏ –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å.'
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.id, text=prizent,reply_markup=markup)
            case 'CallSchedule':
                markup = types.InlineKeyboardMarkup(row_width=2)
                Exit = types.InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data='Menu')
                markup.add(Exit)
                result = '–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–≤–æ–Ω–∫–æ–≤\n–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫:\n1 —É—Ä–æ–∫ 9:30-9:50\n2 —É—Ä–æ–∫ 10:00-10:40\n3 —É—Ä–æ–∫ 10:55-11:35\n4 —É—Ä–æ–∫ 11:50-12:30\n5 —É—Ä–æ–∫ 12:45-13:25\n6 —É—Ä–æ–∫ 13:35-14:15\n7 —É—Ä–æ–∫ 14:20-15:00\n\n–í—Ç–æ—Ä–Ω–∏–∫-–ø—è—Ç–Ω–∏—Ü–∞:\n1 —É—Ä–æ–∫ 8:30-9:10\n2 —É—Ä–æ–∫ 9:20-10:00\n3 —É—Ä–æ–∫ 10:15-10:55\n4 —É—Ä–æ–∫ 11:10-11:50\n5 —É—Ä–æ–∫ 12:05-12:45\n6 —É—Ä–æ–∫ 12:55-13:35\n7 —É—Ä–æ–∫ 13:45-14:25'
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.id, text=result,reply_markup=markup)
            case 'ElectronicMagazine':
                markup = types.InlineKeyboardMarkup(row_width=2)
                Site = types.InlineKeyboardButton('edu.gounn.ru',url='https://edu.gounn.ru/authorize?return_uri=%2Fjournal-app%2Fu.112')
                Exit = types.InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data='Menu')
                markup.add(Site, Exit)
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.id, text=f'–≠–ª.–∂—É—Ä.',reply_markup=markup)
            case 'SchoolWebsite':
                markup = types.InlineKeyboardMarkup(row_width=2)
                Site = types.InlineKeyboardButton('–®–∫–æ–ª—å–Ω...', url='https://abramovosc.edusite.ru/')
                Exit = types.InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data='Menu')
                markup.add(Site, Exit)
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.id, text=f'–°–∞–π—Ç —à–∫–æ–ª—ã:',reply_markup=markup)
            case 'ProninWebsite':
                markup = types.InlineKeyboardMarkup(row_width=2)
                Site = types.InlineKeyboardButton('–°–∞–π—Ç –ü—Ä–æ–Ω–∏–Ω–∞...', url='https://proninavfizika.edu-sites.ru/')
                Exit = types.InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data='Menu')
                markup.add(Site, Exit)
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.id, text=f'–°–∞–π—Ç –ü—Ä–æ–Ω–∏–Ω–∞ –ê.–í.:',reply_markup=markup)
            case 'Course':
                markup = types.InlineKeyboardMarkup(row_width=2)
                Exit = types.InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data='Menu')
                markup.add(Exit)
                BASE_URL_ = 'https://www.sberometer.ru/?_%7D_&amp&ysclid=lsng8glkpc780067336'
                response = requests.get(BASE_URL_)
                soup = BeautifulSoup(response.text, 'lxml')
                data = soup.find('span', class_='oracleCurrentCurs')
                namber = data.find("span").text
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.id,text=f'–ö—É—Ä—Å –¥–æ–ª–ª–∞—Ä–∞:{namber}\n–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è —Å —Å–∞–π—Ç–∞:https://www.sberometer.ru/?_%7D_&amp&ysclid=lsng8glkpc780067336',reply_markup=markup)
            case 'Menu':
                markup = types.InlineKeyboardMarkup(row_width=2)
                MenuForStudents = types.InlineKeyboardButton('–ú–µ–Ω—é —É—á–µ–Ω–∏–∫–æ–≤üë®‚Äçüéì', callback_data='MenuForStudents')
                MenufForTeachers = types.InlineKeyboardButton('–ú–µ–Ω—é —É—á–∏—Ç–µ–ª–µ–πüë®‚Äçüè´', callback_data='MenuForTeacher')
                markup.add(MenuForStudents, MenufForTeachers)
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.id, text='–û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é',reply_markup=markup)

@bot.message_handler(content_types=['text'])
def handle_text(message):
    match(message.text):
        case "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —É—Ä–æ–∫–æ–≤":
            photo1 = open('images/–ü–æ–Ω–∏–¥–µ–ª—å–Ω–∏–∫-–≤—Ç–æ—Ä–Ω–∏–∫.jpg', 'rb')
            photo2 = open('images/–°—Ä–µ–¥–∞-—á–µ—Ç–≤–µ—Ä–≥.jpg', 'rb')
            photo3 = open('images/–ü—è—Ç–Ω–∏—Ü–∞.jpg', 'rb')
            bot.send_photo(message.chat.id, photo1)
            bot.send_photo(message.chat.id, photo2)
            bot.send_photo(message.chat.id, photo3)
        case "–û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é":
            markup = types.InlineKeyboardMarkup(row_width=2)
            MenuForStudents = types.InlineKeyboardButton('–ú–µ–Ω—é —É—á–µ–Ω–∏–∫–æ–≤üë®‚Äçüéì', callback_data='MenuForStudents')
            MenufForTeachers = types.InlineKeyboardButton('–ú–µ–Ω—é —É—á–∏—Ç–µ–ª–µ–πüë®‚Äçüè´', callback_data='MenuForTeacher')
            markup.add(MenuForStudents, MenufForTeachers)
            bot.send_message(message.from_user.id, '–û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é', reply_markup=markup)
        case _:
            bot.send_message(message.from_user.id, '–î–ª—è –º–µ–Ω—è —ç—Ç–æ–≥–æ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.\n<b>–ù–µ –Ω–∞–ø—Ä—è–≥–∞–π—Ç–µ –º–µ–Ω—è.</b>',parse_mode="html")

if __name__ == '__main__':
    bot.polling(none_stop=True)